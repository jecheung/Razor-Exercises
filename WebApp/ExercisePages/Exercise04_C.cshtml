@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Exercise04_C");

    var pid = Request.QueryString["pid"];
    if (pid.IsEmpty())
    {
        Response.Redirect("Exercise04_A.cshtml");
    }
    var albumid = Request.Form["AlbumID"];
    var artistid = Request.Form["ArtistID"];
    var title = Request.Form["Title"];
    var releaseyear = Request.Form["ReleaseYear"];
    var releaselabel = Request.Form["ReleaseLabel"];
    var thebutton = Request.Form["theButton"];

    var message = "";

    //these are validator controls execute on the server side

    Validation.Add("Title",
         Validator.Required("Title is required"),
         Validator.StringLength(160, 1, "Title is limited to 160 characters"));

    Validation.Add("ReleaseLabel",
         Validator.StringLength(50, 1, "Label is limited to 50 characters"));

    /*Validation.Add("ArtistID",
         Validator.StringLength(40, 0, "Quantity per unit is limited to 40 characters"));*/

    Validation.Add("ReleaseYear",
        Validator.Integer("Units in year must be a number"),
         Validator.Range(1950, System.DateTime.Now.Year, "Year is out of range, 1950 to today"));


    var db = Database.Open("CHINOOK");
    var artistquery = "SELECT ArtistId, Name "
                    + "FROM Artists "
                    + "ORDER BY Name";
    var artistlist = db.Query(artistquery);
    var queryStatement = "SELECT AlbumID, ArtistID, Title, ReleaseYear, "
                        + "ReleaseLabel "
                        + "FROM Albums "
                        + "WHERE AlbumID = @0";
    var queryAlbums = db.QuerySingle(queryStatement, pid);
    if(queryAlbums == null)
    {
        message = "Album NOT found";
        Response.Redirect("Exercise04_A.cshtml");
    }
}

@section head{
    @*<link href="~/Content/MyCssCopy.css" rel="stylesheet" />*@
}

@section banner{
    <h1>@Page.Title</h1>
}
@if (IsPost)
{
    if (thebutton.Equals("backtosearch"))
    {
        Response.Redirect("Exercise04_A.cshtml");
    }

    if (Validation.IsValid())
    {
        try
        {
            if (thebutton.Equals("update"))
            {
                var sqlcommand = "UPDATE Albums SET "
                                + "Title = @0, "
                                + "ArtistID = @1, "
                                + "ReleaseYear = @2, "
                                + "ReleaseLabel = @3 "
                                + "WHERE AlbumID = @4";
                var rowsaffected = db.Execute(sqlcommand, title,
                    artistid,
                    releaseyear,
                    string.IsNullOrEmpty(releaselabel) ? null : releaselabel, albumid);
                if (rowsaffected > 0)
                {
                    message = "Album has been UPDATED";
                }
                else
                {
                    message = "Album NOT found";
                }
            }
            else if (thebutton.Equals("delete"))
            {
                var deleteTracks = "Delete from Tracks WHERE AlbumID = @0";
                var deleteTracksExecute = db.Execute(deleteTracks, albumid);

                var deleteStatement = "Delete Albums WHERE AlbumID = @0";
                
                
                var rows = db.Execute(deleteStatement, albumid);
                if (rows == 1)
                {
                    message = "Album has been DELETED";
                }
                else
                {
                    message = "Album NOT found";
                }
                albumid = "";
                artistid = "0";
                title = "";
                releaseyear = "";
                releaselabel = "";
            }
        }
        catch (Exception ex)
        {
            <div class="col-12 text-center">
                <p style="color:firebrick; font-size:large">
                    Processing error: @ex.Message
                </p>
            </div>
        }
    }
}
else //IsPost=false
{
    albumid = queryAlbums.AlbumID.ToString();
    artistid = queryAlbums.ArtistID.ToString();
    title = queryAlbums.Title;
    releaseyear = queryAlbums.ReleaseYear == null ? "0" : queryAlbums.ReleaseYear.ToString();
    releaselabel = queryAlbums.ReleaseLabel == null ? "0" : queryAlbums.ReleaseLabel.ToString();
}
@Html.ValidationSummary()

<div class="col-12 text-center">
    <p style="color:green">
        @message
    </p>
</div>
<form id="theForm" action="" method="post">
    <div class="row row-cols-2">
        <div class="col text-right">
            <label id="lblAlbumID" for="AlbumID">Album ID</label>
        </div>
        <div class="col text-left">
            <input type="text" name="AlbumID" value="@albumid" readonly />
        </div><br />
        <div class="col text-right">
            <label id="lblTitle" for="Title">Title</label>
        </div>
        <div class="col text-left">
            <input type="text" name="Title" value="@title" />
        </div><br />
        <div class="col text-right">
            <label id="lblArtistID" for="ArtistID">Artist ID</label>
        </div>
        <div class="col text-left">
            <select name="ArtistID">
                <option value="0">select...</option>
                @foreach (var acollectionrow in artistlist)
                {
                    if (acollectionrow.ArtistID.ToString() == artistid)
                    {
                        <option value="@acollectionrow[0]" selected>@acollectionrow[1]</option>
                    }
                    else
                    {
                        <option value="@acollectionrow[0]">@acollectionrow[1]</option>
                    }
                }
            </select>

        </div><br />

        <div class="col text-right">
            <label id="lblReleaseYear" for="ReleaseYear">ReleaseYear</label>
        </div>
        <div class="col text-left">
            <input type="number" name="ReleaseYear" value="@releaseyear" />
        </div><br />
        <div class="col text-right">
            <label id="lblReleaseLabel" for="ReleaseLabel">Release Label</label>
        </div>
        <div class="col text-left">
            <input type="text" name="ReleaseLabel" value="@releaselabel" />
        </div><br />
    </div>
    <div class="row">
        <div class="col-12 text-center">
            <button type="submit" name="theButton" id="theUpdate" class="btn btn-primary"
                    value="update">
                Update
            </button>&nbsp;&nbsp;&nbsp;
            <button type="submit" name="theButton" id="theDelete" class="btn btn-primary" formnovalidate
                    value="delete">
                Delete Record
            </button>&nbsp;&nbsp;&nbsp;
            <button type="submit" name="theButton" id="theCancel" class="btn btn-primary" formnovalidate
                    value="backtosearch">
                Back to Search
            </button>
        </div>
    </div>
    @* confirmation can be done on a button click using javascript
        we will ask the user to confirm the discontinuing of a product*@
    <script type="text/javascript">
        document.getElementById("theDelete").onclick = ConfirmDelete;
        function ConfirmDelete() {
            return confirm("Are you sure you want to DELETE @title?");
        }
    </script>
</form>
